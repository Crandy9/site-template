Create the database in the droplet first:
(make sure you have nginx, gunicorn, and SSL cert setup)
install postgres:

sudo apt-get update
sudo apt-get install libpq-dev postgresql postgresql-contrib
activate python env and install pscopg2 binary needed to connect to database:
pip install psycopg2-binary
deactivate env:
deactivate

- edit pg_hba.conf file to allow access to prod db from local computer:
sudo nano /etc/postgresql/14/main/pg_hba/conf
- add this rule at the end of the file with your public IP in CIDR notation:
host    all             all             <YOUR_IP_ADDRESS>/32        password
- restart postgres
sudo systemctl restart postgres
- check status
sudo systemctl status postgres
- make sure postgresql is listening on port 5432:
sudo netstat -lnp | grep 5432

- check error logs here:
var/log/postgresql

CREATE PRODUCTION DB:
-log into postgresql shell:
sudo -u postgres psql
- create db:
CREATE DATABASE sheriffcrandy_prod_db;
- Next, create a database user for our project. Make sure to select a secure password:
CREATE USER lctec WITH PASSWORD '2645';
- idk, digitalocean said to do this:
ALTER ROLE lctec SET client_encoding TO 'utf8';
ALTER ROLE lctec SET default_transaction_isolation TO 'read committed';
ALTER ROLE lctec SET timezone TO 'UTC';
- give all rights and privileges to user:
GRANT ALL PRIVILEGES ON DATABASE sheriffcrandy_prod_db TO lctec;
- that's it. quit out of postgres shell:
\q
- go into Django project settings and add db name, host and password to env file:
DBENGINE=django.db.backends.postgresql
DBNAME=sheriffcrandy_prod_db
DBUSER=lctec
DBPASSWORD=2645
DBHOST=127.0.0.1


****
    CONNECT TO PROD DATABASE FROM LOCAL machine

***

-Open pgadmin and right click on server and register new server
-In General tab, create a server name:
sheriffcrandy_prod_server

- in connection tab, add the DigitalOcean droplet IP address:
137.184.248.73
- port:
5432
- maintenance database:
sheriffcrandy_prod_db
- Username:
lctec
- password:
2645
- save
Will automatically add sheriffcrandy_prod_db

- once all of this is completed. Go into python environment variable and 
run 
python manage.py makemigrations
and
python manage.py migrate
- might have to make static directory
- create superuser:
python manage.py createsuperuser:
Username: lctecadmin
First name: Linden
Last name: Crandall
Email: lctechnology@protonmail.com
Password: jesuschristisking!

- collectstatic files so nginx can serve them:
python manage.py collectstatic