**** 

    ssh into digitalocean server
****

create ssh keys (from local computer terminal):
ssh-keygen
- give ssh key name and full path (i.e. /home/lctec/.ssh/stink)
Enter file in which to save the key (/home/lctec/.ssh/id_rsa):

- Add public key ".pub" to droplet in digitalocean.com under settings --> security

- Connect to droplet:
- First ensure droplet is turned on in digitalocean dashboard
- Then connect to VPS from local machine terminal:
ssh -i /home/lctec/.ssh/id_rsa_digitalocean root@<DROPLET_IP>
or
ssh root@<DROPLET_IP>
- first time opening vps, update/upgrade packages
sudo apt update
sudo apt upgrade
- exit out of terminal
- go to digitalocean and turn off server, then turn it back on to reboot it

- ssh again into server

- create user lctec (or whatever name you want)
adduser lctec
- create password and enter user info
- add lctec to sudo group
usermod -aG sudo lctec
- verify sudo access, switch to lctec
su - lctec
- run a random sudo command to make sure the new user has access:
sudo ls -la /root

- enter lctec password, not root password

- close terminal again and ssh into server as root user
- while logged in as root, 
- enable connecting to VPS with new user (lctec) instead of default (root):
*** the whitespace between ~/.ssh and /home/lctec is intentional **
rsync --archive --chown=lctec:lctec ~/.ssh /home/lctec
- exit out of terminal to disconnect from server as root
- from local computer terminal, run:
ssh -i /home/lctec/.ssh/id_rsa_digitalocean lctec@<DROPLET_IP>
or
ssh lctec@<DROPLET_IP>
- if you get denied (public key error), connect to VPS via root and run:
nano /etc/ssh/sshd_config
- change PasswordAuthentication from no to yes
- save ctrl-o, enter, ctrl-x 
- reload ssh
sudo service ssh reload
- close out of VPS terminal, open terminal on host computer and enter:
ssh-copy-id lctec@<DROPLET_IP>
- enter password you made for lctec user
- you should receive this message on the console:

"Number of key(s) added: 4

Now try logging into the machine, with:   
ssh lctec@<DROPLET_IP>
and check to make sure that only the key(s) you wanted were added.
"
- then run  (you probably have to enter password everytime now)
ssh lctec@<DROPLET_IP>


** EASY SSHING INTO DROPLET (NOT REQUIRED BUT CONVENIENT)
- in local machine, add bash script to easily ssh into VPS (not required. Just makes things easier):
- create scripts directory:
mkdir scripts
- create bash script with ssh command:

```
sudo nano kag-ssh-server
#!/bin/bash

# Usage: ssh into kag vps

ssh lctec@<DROPLET_IP>
```


- save it and make it executable
chmod+x kag-ssh-server

- add the absolute path of this file to the ~/.bashrc directory
export PATH="$PATH:/full/path/to/your/script/directory"

- restart bashrc file
source ~/.bashrc

- now you can ssh into the server easily by opening up a terminal and entering:
kag-ssh-server


********

    SETTING UP PROD SERVER DIRECTORIES

********
In production we don't need to have source control (git) installed, 
we just need the most recent project files and then have nginx and gunicorn serve them

- Create a site_backups and sites directory
sudo mkdir /var/www/sites
sudo mkdir /var/www/site_backups

- change ownership to lctec
sudo chown lctec:lctec /var/www/sites/
sudo chown lctec:lctec /var/www/site_backups/




****
SHOULD NOT HAVE GIT INSTALLED IN PROD SERVER. DELETE AFTER SETTING UP 


CONNECT VPS TO GITHUB REPO:

****
ssh dir: /home/lctec/.ssh
cd to /home/lctec and run:

ssh-keygen
give the key a name: 
your_ssh_key_name

Your identification has been saved in 
.ssh/your_ssh_key_name

Your public key has been saved in 
.ssh/your_ssh_key_name.pub

Now login to github and go to settings --> SSH and GPG Keys --> click New SSH key
Add the .pub key to git and save

* IMPORTANT *
Add newly created private ssh keys to ssh agent so that ssh can "see" this key
eval $(ssh-agent)
ssh-add ~/.ssh/your_key_name
- test ssh connection to github:
ssh -T git@github.com

Should see this (enter 'yes' for question prompt):

The authenticity of host 'github.com (20.205.243.166)' can't be established.
ED25519 key fingerprint is SHA256:+DiY3wvvV6TuJJhbpZisF/zLDA0zPMSvHdkr4UvCOqU.
This key is not known by any other names
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added 'github.com' (ED25519) to the list of known hosts.
Hi Crandy9! You've successfully authenticated, but GitHub does not provide shell access.



- if Bad owner or permissions on /home/lctec/.ssh/config error, 
or ~/.ssh directory doesn't exist run:
sudo chmod 700 ~/.ssh
sudo chmod 600 ~/.ssh/*
- try again
- create config file:
cd to ~/.ssh:
touch config
- add public key located at .ssh/your_key_name.pub to GitHub ssh keys
use cat .ssh/your_key_name.pub to display public key for copying


- clone production repo to droplet:
eval $(ssh-agent)
ssh-add ~/.ssh/your_key_name
- test ssh connection to github:
ssh -T git@github.com

ssh clone `get ssh clone url from repo in github`
then set up Django project with gunicorn and nginx servers (see backend README.md, frontend README.md gunicorn.txt, nginx.txt, postgresql.txt). 


***

    Need to add firewall settings in both DigitalOcean dashboard and VPS ufw firewall settings
    to allow inbound traffic (for ssh'ing, connecting to postgreSQL DB, and allowing public access to website via http and https)
***


DIGITAL OCEAN DASHBOARD
-Log into DigitalOcean dashboard
-On lefthand toolbar, click 'Manage', then 'Networking'
-In the men click 'Firewalls' and create a firewall
- for inbound rules, add the following:

type    protocol    port range  sources
SSH     TCP         22          <YOU_PUBLIC_IP>/32 # this is so you can ssh into the VPS server. Get your IP here: https://www.whatsmyip.org/
HTTP    TCP         80          ALL Ipv4 All IPv6 # so people can visit the public website from their browsers over http
HTTPS   TCP         443         ALL Ipv4 All IPv6 # so people can visit the public website from their browsers over htts
HTTPS   TCP         5432        <YOU_PUBLIC_IP>/32 # allows you to connect to production database locally from your computer